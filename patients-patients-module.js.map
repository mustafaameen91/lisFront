{"version":3,"sources":["./src/app/patients/patients.page.ts","./src/app/patients/patients.page.html","./src/app/patients/patients.module.ts","./src/app/patients/patients-routing.module.ts","./src/app/patients/patients.page.scss"],"names":[],"mappings":"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","file":"patients-patients-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ModalController, LoadingController, AlertController } from '@ionic/angular';\nimport { PatientPage } from '../patient/patient.page';\nimport axios from 'axios';\nimport { api, munaApi } from '../server';\nimport * as moment from 'moment';\nimport {Router} from '@angular/router'\nimport { Storage } from '@ionic/storage-angular';\n\n@Component({\n  selector: 'app-patients',\n  templateUrl: './patients.page.html',\n  styleUrls: ['./patients.page.scss'],\n})\nexport class PatientsPage implements OnInit {\n\n  constructor(\n    public modalController: ModalController,\n    public loadingCtrl: LoadingController,\n    public alertCtrl: AlertController,\n    public router: Router,\n    public storage: Storage\n  ) { }\n\n  page = 1;\n  numberPerPage = 20;\n  patients = [];\n  api = api;\n  searchbar = '';\n  searchbarType = 'patient';\n  userinfo = {\n    idRole: 3\n  };\n  ngOnInit() {\n\n    this.storage.get('user').then(res=> {\n      this.userinfo = res.data\n      this.getPatients()\n      \n    })\n    \n\n  }\n\n  getPatients() {\n    axios.get(api + 'patients?page=' + this.page + '&roleId=' + this.userinfo.idRole + '&number=' + this.numberPerPage).then(res => {\n      this.patients = res.data['patients'];\n    }).catch(err => {\n      console.log(err);\n      \n    })\n  }\n\n\n  nextPage() {\n    this.patients = []\n    if (this.page > 0) {\n      this.page = this.page + 1;\n      this.getPatients();\n    }\n  }\n\n  prevPage() {\n    this.patients = []\n    if (this.page > 1) {\n      this.page = this.page - 1;\n      this.getPatients();\n    }\n  }\n\n  getGender(gender) {\n    if (gender == 0) {\n      return 'Male';\n    } else {\n      return 'Female';\n    }\n  }\n\n  getAge(date) {\n    return moment().diff(date, 'years',false);\n  }\n\n  async showPatientProfile(id) {\n    const modal = await this.modalController.create({\n      component: PatientPage,\n      mode:'ios',\n      componentProps: {\n        id: id\n      },\n      cssClass: 'patientModal'\n    });\n    return await modal.present();\n  }\n\n\n  async addToMuna(id) {\n    let loading = await this.loadingCtrl.create({\n      message:'Please wait...'\n    });\n    let message = await this.alertCtrl.create({\n      header:'Confirm adding this pateint to MUNA system?',\n      buttons: [\n        {\n          text: 'YES',\n          handler: async() => {\n            await loading.present();\n            let munaData = {\n              data: {\n                 type: \"identity\",\n                 attributes: {\n                    email: id['email'],\n                    passport: id['documentId'],\n                 },\n              },\n           };\n           axios\n                 .post(munaApi + \"identities\", JSON.stringify(munaData))\n                 .then((response) => {\n                    let munaId = response.data.data.id\n                    axios.put(api + 'patientMunaId/' + id.idPatient, {\n                      munaId: munaId\n                    }).finally(async () => {\n                      this.getPatients();\n                      await loading.dismiss();\n                    })\n                 })\n                 .catch((error) => {\n                    console.log(error);\n                 }).finally(async () => {\n                  await loading.dismiss();\n                 });\n\n          }\n        },\n        {\n          text: \"NO\"\n        }\n      ]\n    });\n    await message.present();\n    \n  }\n\n  async search(e) {\n    console.log(e);\n    if (this.searchbarType == 'patient') {\n      let loading = await this.loadingCtrl.create({\n        message: 'Loading...'\n      });\n      await loading.present();\n      axios.get(api + 'findPatient?search=' + this.searchbar).then(res => {\n        this.patients = res.data\n        \n      }).finally(async () => {\n        await loading.dismiss()\n      })\n    } else {\n      axios.get(api + 'patientResult/' + this.searchbar).then(res => {\n        let testId = res.data.patientTestId\n        axios.get(api + 'patientTest/ ' + testId).then(res => {\n          let patientId = res.data.patientId\n          this.router.navigateByUrl('/patients/' + patientId + '/tests')\n        })\n      })\n    }\n\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"userinfo['idRole'] != 3\\\" routerLink=\\\"/patient/new\\\" color=\\\"success\\\" fill=\\\"solid\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n        Add new patient\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <ion-segment mode=\\\"ios\\\" [(ngModel)]=\\\"searchbarType\\\">\\n          <ion-segment-button value=\\\"patient\\\">\\n            <ion-label>Patient info</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"test\\\">\\n            <ion-label>Test info</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n    <ion-searchbar *ngIf=\\\"searchbarType == 'patient'\\\" mode=\\\"ios\\\" placeholder=\\\"Search By Patient Passport or Patient Name\\\" (keyup.enter)=\\\"search($event)\\\" [(ngModel)]=\\\"searchbar\\\" [debounce]=\\\"250\\\"></ion-searchbar>\\n    <ion-searchbar *ngIf=\\\"searchbarType == 'test'\\\" mode=\\\"ios\\\" placeholder=\\\"Search By Test ID\\\" (keyup.enter)=\\\"search($event)\\\" [(ngModel)]=\\\"searchbar\\\" [debounce]=\\\"250\\\"></ion-searchbar>\\n\\n      </ion-col>\\n      <ion-col size=\\\"3\\\">\\n        \\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n<ion-list>\\n  <!-- [routerLink]=\\\"'/patient/' + patient.idPatient\\\" -->\\n  <ion-item *ngFor=\\\"let patient of patients\\\" lines=\\\"full\\\">\\n    <ion-icon *ngIf=\\\"patient.image == undefined\\\" slot=\\\"start\\\" name=\\\"person-circle-outline\\\"></ion-icon>\\n    <ion-avatar *ngIf=\\\"patient.image != undefined\\\" slot=\\\"start\\\">\\n      <img [src]=\\\"api + patient.image.photoPath\\\" />\\n    </ion-avatar>\\n    <ion-label><b>{{patient.name}}</b><br><small>#{{patient.idPatient}}</small></ion-label>\\n    <ion-label>Age: {{getAge(patient.dob)}} Years</ion-label>\\n    <ion-label>Gender: {{getGender(patient.gender)}}</ion-label>\\n    <ion-label>Phone: {{patient.phone}}</ion-label>\\n    <ion-label>\\n      <img *ngIf=\\\"patient.munaId != null\\\" src=\\\"assets/icon/iraqmosafer.png\\\" height=\\\"30px\\\" alt=\\\"\\\">\\n    </ion-label>\\n    <div *ngIf=\\\"userinfo['idRole'] != 3\\\"  style=\\\"width:100px\\\">\\n      <ion-button color=\\\"danger\\\" [routerLink]=\\\"'/patients/' + patient.idPatient + '/tests'\\\" expand=\\\"block\\\" fill=\\\"clear\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"flask\\\"></ion-icon>\\n        TESTS\\n      </ion-button>\\n      <ion-button color=\\\"secondary\\\" [routerLink]=\\\"'/patient/' + patient.idPatient\\\" expand=\\\"block\\\" fill=\\\"clear\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"create\\\"></ion-icon>\\n        EDIT\\n      </ion-button>\\n      <ion-button *ngIf=\\\"patient.munaId == null\\\" color=\\\"secondary\\\" (click)=\\\"addToMuna(patient)\\\" expand=\\\"block\\\" fill=\\\"clear\\\">\\n        <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n        IRAQ MOSAFER\\n      </ion-button>\\n    </div>\\n  </ion-item>\\n</ion-list>\\n\\n<ion-list *ngIf=\\\"patients.length == 0\\\">\\n  <ion-item *ngFor=\\\"let i of [1,2,3,4,5,6,7,8]\\\" lines=\\\"full\\\" button>\\n    <ion-grid fixed>\\n      <ion-row>\\n        <ion-col size=\\\"3\\\">\\n          <ion-skeleton-text animated></ion-skeleton-text>\\n        </ion-col>\\n        <ion-col size=\\\"2\\\">\\n          <ion-skeleton-text animated></ion-skeleton-text>\\n        </ion-col>\\n        <ion-col size=\\\"2\\\">\\n          <ion-skeleton-text animated></ion-skeleton-text>\\n        </ion-col>\\n        <ion-col size=\\\"2\\\">\\n          <ion-skeleton-text animated></ion-skeleton-text>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-item>\\n</ion-list>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-title>Page: {{page}}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"prevPage()\\\">\\n        <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"nextPage()\\\">\\n        <ion-icon name=\\\"chevron-forward-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PatientsPageRoutingModule } from './patients-routing.module';\n\nimport { PatientsPage } from './patients.page';\nimport {NgxPrintModule} from 'ngx-print';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PatientsPageRoutingModule,\n    NgxPrintModule\n  ],\n  declarations: [PatientsPage]\n})\nexport class PatientsPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PatientsPage } from './patients.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PatientsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PatientsPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXRpZW50cy5wYWdlLnNjc3MifQ== */\";"],"sourceRoot":"webpack:///"}